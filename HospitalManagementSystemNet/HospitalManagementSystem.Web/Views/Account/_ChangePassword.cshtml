@model HospitalManagementSystem.Models.Person
@{
    var postView = "ChangeGeneratedPassword";

    if (Request.IsAuthenticated)
    {
        postView = "ChangePassword";
    }
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Password</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Home</a>
            </li>
            <li class="active">
                <strong>Password</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox-content">
        <div class="ibox-title">
            <h4>Change password</h4>
        </div>
        <br />
        <div class="row">
            <div class="col-xs-12">
                @using (Html.BeginForm(postView, "Account", FormMethod.Post))
                {
                    <div class="form-group">
                        <label class="text-danger">Note: Password must have atleast 6 characters.</label>
                    </div>

                    if (Model != null && !string.IsNullOrWhiteSpace(Model.Error))
                    {
                        <div class="alert alert-warning" role="alert">
                            <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                            <strong>Outcome: </strong> @Model.Error
                        </div>
                    }

                    if (Request.IsAuthenticated)
                    {
                        <div class="form-group">
                            <div>@Html.LabelFor(ui => ui.Password)</div>
                            <div>@Html.PasswordFor(ui => ui.Password, new { @class = "form-control" }) <br class="hidden-sm hidden-md hidden-lg" /> <span class="alert-warning"> @Html.ValidationMessageFor(ui => ui.Password)</span></div>
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <div>@Html.HiddenFor(ui => ui.UserName)</div>
                            <div>@Html.HiddenFor(ui => ui.Password)</div>
                        </div>
                    }


                    <div class="form-group">
                        <div>@Html.LabelFor(ui => ui.NewPassword)</div>
                        <div>@Html.PasswordFor(ui => ui.NewPassword, new { @class = "form-control" }) <br class="hidden-sm hidden-md hidden-lg" /> <span class="alert-warning"> @Html.ValidationMessageFor(ui => ui.NewPassword)</span></div>
                    </div>

                    <div class="form-group">
                        <div>@Html.LabelFor(ui => ui.ConfirmPassword)</div>
                        <div>@Html.PasswordFor(ui => ui.ConfirmPassword, new { @class = "form-control" }) <br class="hidden-sm hidden-md hidden-lg" /> <span class="alert-warning"> @Html.ValidationMessageFor(ui => ui.ConfirmPassword)</span></div>
                    </div>

                    <button class="btn btn-primary btn-lg pull-right" type="submit">Change</button>
                }
            </div>
        </div>
    </div>
</div>
